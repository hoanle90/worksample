{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/heu/Desktop/worksample/frontend/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {},\n  reducers: {\n    addToCart: (state, action) => {\n      const id = action.payload;\n      state[id] = (state[id] || 0) + 1;\n    },\n    removeFromCart: (state, action) => {\n      delete state[action.payload];\n    },\n\n    updateQuantity: (state, action) => {\n      const { id, quantity } = action.payload;\n      if (quantity <= 0) {\n        delete state[id];\n      } else {\n        state[id] = quantity;\n      }\n    },\n    setCart: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  setCart,\n} = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;AAEA,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN,cAAc,CAAC;IACf,UAAU;QACR,WAAW,CAAC,OAAO;YACjB,MAAM,KAAK,OAAO,OAAO;YACzB,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI;QACjC;QACA,gBAAgB,CAAC,OAAO;YACtB,OAAO,KAAK,CAAC,OAAO,OAAO,CAAC;QAC9B;QAEA,gBAAgB,CAAC,OAAO;YACtB,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,OAAO,OAAO;YACvC,IAAI,YAAY,GAAG;gBACjB,OAAO,KAAK,CAAC,GAAG;YAClB,OAAO;gBACL,KAAK,CAAC,GAAG,GAAG;YACd;QACF;QACA,SAAS,CAAC,OAAO;YACf,OAAO,OAAO,OAAO;QACvB;IACF;AACF;AAEO,MAAM,EACX,SAAS,EACT,cAAc,EACd,cAAc,EACd,OAAO,EACR,GAAG,UAAU,OAAO;uCACN,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/heu/Desktop/worksample/frontend/src/store/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartSlice\";\nimport { createWrapper } from \"next-redux-wrapper\";\n\nconst makeStore = () =>\n  configureStore({\n    reducer: {\n      cart: cartReducer,\n    },\n  });\n\nexport const wrapper = createWrapper(makeStore);\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;;AAEA,MAAM,YAAY,IAChB,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;QACb,SAAS;YACP,MAAM,kHAAA,CAAA,UAAW;QACnB;IACF;AAEK,MAAM,UAAU,CAAA,GAAA,yIAAA,CAAA,gBAAa,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/heu/Desktop/worksample/frontend/src/pages/_app.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { wrapper } from \"../store/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCart } from \"../store/cartSlice\";\nimport \"../styles/globals.css\";\n\nfunction MyApp({ Component, ...rest }) {\n  const { store, props } = wrapper.useWrappedStore(rest);\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  // Load cart from localStorage on first load\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    if (savedCart) {\n      dispatch(setCart(JSON.parse(savedCart)));\n    }\n  }, [dispatch]);\n\n  // Save cart to localStorage on change\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  return <Component {...props.pageProps} />;\n}\n\nexport default wrapper.withRedux(MyApp);\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM;IACnC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,8GAAA,CAAA,UAAO,CAAC,eAAe,CAAC;IACjD,MAAM,WAAW,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,OAAO,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI;IAE9C,4CAA4C;IAC5C,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,SAAS,CAAA,GAAA,kHAAA,CAAA,UAAO,AAAD,EAAE,KAAK,KAAK,CAAC;QAC9B;IACF,GAAG;QAAC;KAAS;IAEb,sCAAsC;IACtC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C,GAAG;QAAC;KAAK;IAET,qBAAO,qKAAC;QAAW,GAAG,MAAM,SAAS;;;;;;AACvC;uCAEe,8GAAA,CAAA,UAAO,CAAC,SAAS,CAAC","debugId":null}}]
}