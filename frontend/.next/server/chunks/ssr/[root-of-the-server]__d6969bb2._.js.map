{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/heu/Desktop/worksample/frontend/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {},\n  reducers: {\n    addToCart: (state, action) => {\n      const id = action.payload;\n      state[id] = (state[id] || 0) + 1;\n    },\n    removeFromCart: (state, action) => {\n      delete state[action.payload]\n    },\n\n    updateQuantity: (state, action) => {\n      const { id, quantity } = action.payload;\n      if (quantity <= 0) {\n        delete state[id];\n      } else {\n        state[id] = quantity;\n      }\n    },\n  },\n});\n\nexport const { addToCart,removeFromCart, updateQuantity } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN,cAAc,CAAC;IACf,UAAU;QACR,WAAW,CAAC,OAAO;YACjB,MAAM,KAAK,OAAO,OAAO;YACzB,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI;QACjC;QACA,gBAAgB,CAAC,OAAO;YACtB,OAAO,KAAK,CAAC,OAAO,OAAO,CAAC;QAC9B;QAEA,gBAAgB,CAAC,OAAO;YACtB,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,OAAO,OAAO;YACvC,IAAI,YAAY,GAAG;gBACjB,OAAO,KAAK,CAAC,GAAG;YAClB,OAAO;gBACL,KAAK,CAAC,GAAG,GAAG;YACd;QACF;IACF;AACF;AAEO,MAAM,EAAE,SAAS,EAAC,cAAc,EAAE,cAAc,EAAE,GAAG,UAAU,OAAO;uCAC9D,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/heu/Desktop/worksample/frontend/src/store/store.js"],"sourcesContent":["// store/index.js\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartSlice\";\nimport { createWrapper } from \"next-redux-wrapper\";\n\n// Add persistence\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"], // only persist cart\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const makeStore = () =>\n  configureStore({\n    reducer: persistedReducer,\n    middleware: [thunk],\n  });\n\nexport const wrapper = createWrapper(makeStore);\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AACjB;AACA;AACA;;;;;;;;;;;AAKA;AACA;;;;;;;;;;;;;;;AAEA,MAAM,cAAc,CAAA,GAAA,0GAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,MAAM,kHAAA,CAAA,UAAW;AACnB;AAEA,MAAM,gBAAgB;IACpB,KAAK;IACL;IACA,WAAW;QAAC;KAAO;AACrB;AAEA,MAAM,mBAAmB,eAAe,eAAe;AAEhD,MAAM,YAAY,IACvB,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;QACb,SAAS;QACT,YAAY;YAAC,4HAAA,CAAA,UAAK;SAAC;IACrB;AAEK,MAAM,UAAU,CAAA,GAAA,yIAAA,CAAA,gBAAa,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/heu/Desktop/worksample/frontend/src/pages/_app.js"],"sourcesContent":["import { wrapper } from \"../store/store\";\nimport \"../styles/globals.css\";\n\nfunction MyApp({ Component, ...rest }) {\n  const { props } = wrapper.useWrappedStore(rest);\n  return <Component {...props.pageProps} />;\n}\n\nexport default wrapper.withRedux(MyApp);\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM;IACnC,MAAM,EAAE,KAAK,EAAE,GAAG,8GAAA,CAAA,UAAO,CAAC,eAAe,CAAC;IAC1C,qBAAO,qKAAC;QAAW,GAAG,MAAM,SAAS;;;;;;AACvC;uCAEe,8GAAA,CAAA,UAAO,CAAC,SAAS,CAAC","debugId":null}}]
}